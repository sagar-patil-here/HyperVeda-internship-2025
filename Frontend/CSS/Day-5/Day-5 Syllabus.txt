Day 5 – Transitions, Animations, and Final Project 

Objective:
Polish interactivity and apply all skills in a real-world project.

Topics:

• Pseudo-classes
Description:
Special selectors that apply styles based on the element's state (hover, focus, etc.)

: hover
Applies when the user hovers the mouse over the element.

Syntax:

selector:hover 
{ 
    property: value; 
    }

Example:

button:hover {
background-color: green;
}

: active
Applies when the element is being clicked.

Syntax:
selector\:active 
{
     property: value; 
     }

Example:

button:active {
transform: scale(0.95);
}

: focus
Applies when an input or button is focused.

Syntax:

selector:focus {
     property: value;
      }
Example:

input:focus {
outline: 2px solid blue;
}

: nth-child()
Selects an element based on its position in its parent.

Syntax:
element:nth-child(n) 
{ 
    property: value; 
    }
Example:
li:nth-child(2) {
color: red;
}

• Transitions
Description:
Smoothly animate changes from one CSS state to another.

Properties:
transition-property: Defines which CSS property to animate.
transition-duration: Sets how long the transition takes.
transition-timing-function: Defines the speed curve (ease, linear, ease-in, ease-out).

ease – Starts slow, speeds up in the middle, then slows down at the end (default).

linear – Moves at a constant speed from start to finish.

ease-in – Starts slowly, then speeds up towards the end.

ease-out – Starts fast, then slows down smoothly towards the end.

Syntax:
selector {
transition: property duration timing-function;
}

Example:
.box {
transition: background-color 0.3s ease;
}
.box:hover {
background-color: orange;
}

• Transform
Description:
Allows rotation, scaling, translation, etc. of elements.

scale()
Enlarges or shrinks the element.

Syntax:
transform: scale(value);

Example:

.card:hover {
transform: scale(1.5);
}

rotate()
Rotates the element.

Syntax:

transform: rotate(angle);

Example:

.icon:hover {
transform: rotate(45deg);
}

translate()
Moves the element.

Syntax:

transform: translate(x, y);

Example:
.button\:hover {
transform: translateX(10px);
}

• Visual Effects

box-shadow
Adds shadow to a box element.

Syntax:

box-shadow: x-offset y-offset blur color;


Example:

.card {
box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}

text-shadow
Adds shadow to text.

Syntax:

text-shadow: x-offset y-offset blur color;

Example:

h1 {
text-shadow: 2px 2px 4px gray;
}

opacity
Controls the transparency of an element.

Syntax:

opacity: value;

Example:

.faded {
opacity: 0.5;
}

cursor
Changes the mouse cursor when hovering over an element.

Syntax:

cursor: value;
Example:
button {
cursor: pointer;
}

• Keyframe Animation
Description:
Defines complex multi-step animations using @keyframes.

Syntax:
@keyframes animationName {
0%   { property: value; }
100% { property: value; }
}

Example:
@keyframes slide {
0% {
transform: translateX(0);
}
100% {
transform: translateX(100px);
}
}

.box {
animation: slide 1s ease-in-out forwards;
}

Tips:
• Don’t animate everything; use subtle, meaningful animations.
• Combine \:hover and transition for smoother UI interactions.
• Use transform and shadow effects to highlight active elements.

Final Project (Choose 1 or More):
• Portfolio Landing Page (recommended)
• Product Card Showcase
• Personal Blog Layout
• Animated Button and Form UI
